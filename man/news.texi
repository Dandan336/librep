@c -*-Texinfo-*-

@chapter News
@cindex News

@unnumberedsec 0.8.1

Fixed some documentation bugs; fixed some build problems


@unnumberedsec 0.8

@itemize @bullet

@item Default scoping is now lexical, only variables declared using
@code{defvar} are dynamically scoped.

@item There is now only a single namespace for symbols (excepting
property lists), this means that the @code{fset},
@code{symbol-function} and @code{fboundp} functions have been removed

This allows all elements in procedure-call forms to be evaluated
equally (as in scheme), so things like:

@lisp
((if t + -) 1 2)
@end lisp

@noindent
now work. Related to this, function names (i.e. symbols and lambda
expressions) are no longer dereferenced by any operations taking
functions as arguments. Only built-in subroutines and closures are
considered functions.

This means that where before you'd write something like:

@lisp
(mapcar '+ '(1 2 3))
@end lisp

@noindent
this is now illegal; the @code{+} function must be evaluated:

@lisp
(mapcar + '(1 2 3))
@end lisp

@item @code{lambda} is now a special form evaluating to a closure (as
in scheme); this means that the following are exactly equivalent:

@lisp
(lambda (x) x) @equiv{} (function (lambda (x) x)) @equiv{} #'(lambda (x) x)
@end lisp

An alternative method of enclosing a lambda expression is to use the
@code{make-closure} function.

@item @code{gaol} module providing semi-safe environment for untrusted
code to evaluate in

@item Support for i18n through @code{gettext} module; also support for
@samp{%1$s} type format specifiers

@item New functions @code{string-equal} and @code{string-lessp}

@end itemize


@unnumberedsec 0.7.1

@itemize @bullet

@item Added @samp{--with-rep-prefix} option to autoconf AM_PATH_REP
macro

@item Fixed bug when inserting a new timer before an existing timer

@item Fix the malloc tracking code

@item Fix dlmalloc for FreeBSD

@item Use install when installing, not cp

@item Some fixes for compiling with SUN's C compiler on Solaris

@end itemize


@unnumberedsec 0.7

@itemize @bullet

@item Added file handler for read-only access to the contents of tar
archives, access files like @file{foo.tar.gz#tar/bar}

@item @code{process-id} function now returns pid of lisp interpreter
when called with zero arguments

@item Added (untested) support for loading dynamic objects via
@code{shl_load} (HP-UX)

@item Added (untested) support for systems that prefix symbol names in
dynamic objects with underscores

@item Fix bug when compiling @code{last} function

@item Fix bug of not closing files in the @code{load} function

@end itemize


@unnumberedsec 0.6.2

@itemize @bullet

@item Added @code{autoload-verbose} variable; set it to @code{nil} to
turn off the messages when autoloading

@item Fix problems when @samp{--prefix} option has a trailing slash

@item Updated libtool files to version 1.3.3

@item Initial (incomplete) support for building under Tru64, from Aron
Griffis

@end itemize


@unnumberedsec 0.6.1

No new features; minor portability tweaks and build changes. Fix bug of
trying to load directories as Lisp scripts


@unnumberedsec 0.6

@itemize @bullet

@item Add @code{unsetenv} function

@item @code{system} now uses @code{process-environment}

@item Workaround compiler bug with GCC 2.95 on sparc

@item Fix build problem where libsdbm.la can't be located

@end itemize


@unnumberedsec 0.5

@itemize @bullet

@item New function @code{set-input-handler}, registers an asynchronous
input handler for a local file

@item Don't abort on receipt of unexpected @code{SIGCHLD} signals

@item Upgrade libtool to version 1.2f

@item The @code{rep} binary by default always loads a script named
@file{rep}, not named by it's @code{argv[0]} (this breaks under the
newer libtool)

@end itemize


@unnumberedsec 0.4

@itemize @bullet

@item Sending a rep process a @code{SIGUSR2} prints all debug buffers

@item Added @samp{--with-value-type}, and
@samp{--with-malloc-alignment} configure options. Also added code to
automatically detect the first of these options.

@item Fixed some 64-bit problems

@item Removed the difference between static and dynamic strings

@end itemize


@unnumberedsec 0.3

@itemize @bullet

@item New compiler command line option @samp{--write-docs}

@end itemize


@unnumberedsec 0.2

@itemize @bullet

@item The variables @code{error-mode} and @code{interrupt-mode} control
where errors and user-interrupts (i.e. @code{SIGINT} signals) are
handled. The three possible values are: @code{top-level}, @code{exit}
and @code{nil} (denotes the current event loop).

@item Fixed bug where all dynamic types were erroneously @code{symbolp}.

@item @code{SIGINT}, @code{SIGHUP} and @code{SIGTERM} signals should
now be caught more successfully.

@item Added a new directory to @code{dl-load-path}:
@samp{@var{libexecdir}/rep/@var{arch}} to contain third-party shared
libraries.

@end itemize


@unnumberedsec 0.1

First public release.
